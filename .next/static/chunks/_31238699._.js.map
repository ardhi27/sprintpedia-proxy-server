{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/public/logo-search.svg.mjs%20%28structured%20image%20object%20with%20data%20url%29"],"sourcesContent":["import src from \"IMAGE\";\nexport default { src, width: 24, height: 24, blurWidth: 0, blurHeight: 0};\n"],"names":[],"mappings":";;;;AAAA;;uCACe;IAAE,KAAA,4HAAG;IAAE,OAAO;IAAI,QAAQ;IAAI,WAAW;IAAG,YAAY;AAAC","debugId":null}},
    {"offset": {"line": 27, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/features/common/store/useInstagramResponse.tsx"],"sourcesContent":["import { Welcome } from \"@/shared/types/response/instagram-response-types\";\nimport { create } from \"zustand\";\n\ninterface InstagramStoreProps {\n  data: Welcome | null;\n  updateData: (newData: Welcome) => void;\n}\n\nexport const useResponseInstagramDataStore = create<InstagramStoreProps>(\n  (set) => ({\n    data: null,\n    updateData: (newData: Welcome) => set({ data: newData }),\n  })\n);\n"],"names":[],"mappings":";;;;AACA;;AAOO,MAAM,gCAAgC,IAAA,mQAAM,EACjD,CAAC,MAAQ,CAAC;QACR,MAAM;QACN,YAAY,CAAC,UAAqB,IAAI;gBAAE,MAAM;YAAQ;IACxD,CAAC","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/features/common/component/instagram-data-input.tsx"],"sourcesContent":["\"use client\";\nimport { Button, Group, Input, Stack, Text } from \"@mantine/core\";\nimport Image from \"next/image\";\nimport axios from \"axios\";\nimport searchIcon from \"@/assets/logo-search.svg\";\nimport { useResponseInstagramDataStore } from \"../store/useInstagramResponse\";\nimport { useForm } from \"react-hook-form\";\nimport InstagramUsernameProps from \"@/shared/types/form/instagram-username-form\";\nimport { useState } from \"react\";\n\nconst InstagramDataInput = () => {\n  const { data, updateData } = useResponseInstagramDataStore();\n  const [loading, setIsLoading] = useState(false);\n  const { register, handleSubmit } = useForm<InstagramUsernameProps>();\n\n  const onSubmit = async (data: InstagramUsernameProps) => {\n    setIsLoading(true);\n    try {\n      const res = await axios.get(`/api/instagramdata`, {\n        params: { username: data.username },\n        withCredentials: true,\n      });\n      updateData(res.data);\n      console.log(\"API result:\", res.data);\n    } catch (err: any) {\n      console.error(\"Error:\", err.response?.data || err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Stack className=\"w-full\">\n        <Group className=\"w-full h-full items-center flex-nowrap\" gap={2}>\n          <Input\n            className=\"w-full rounded-lg\"\n            size=\"md\"\n            {...register(\"username\")}\n            placeholder=\"Masukkan username\"\n          />\n          <Button type=\"submit\" className=\"bg-purple-500 hover:bg-purple-500\">\n            <Image src={searchIcon} alt=\"search-icon\" className=\"text-white\" />\n          </Button>\n        </Group>\n        {loading ? (\n          <Text className=\"text-black font-bold\">Sedang Mengambil Data!</Text>\n        ) : (\n          <></>\n        )}\n      </Stack>\n    </form>\n  );\n};\n\nexport { InstagramDataInput };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AARA;;;;;;;;AAUA,MAAM,qBAAqB;;IACzB,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAA,+LAA6B;IAC1D,MAAM,CAAC,SAAS,aAAa,GAAG,IAAA,wSAAQ,EAAC;IACzC,MAAM,EAAE,QAAQ,EAAE,YAAY,EAAE,GAAG,IAAA,qQAAO;IAE1C,MAAM,WAAW,OAAO;QACtB,aAAa;QACb,IAAI;YACF,MAAM,MAAM,MAAM,sMAAK,CAAC,GAAG,CAAE,sBAAqB;gBAChD,QAAQ;oBAAE,UAAU,KAAK,QAAQ;gBAAC;gBAClC,iBAAiB;YACnB;YACA,WAAW,IAAI,IAAI;YACnB,QAAQ,GAAG,CAAC,eAAe,IAAI,IAAI;QACrC,EAAE,OAAO,KAAU;gBACO;YAAxB,QAAQ,KAAK,CAAC,UAAU,EAAA,gBAAA,IAAI,QAAQ,cAAZ,oCAAA,cAAc,IAAI,KAAI,IAAI,OAAO;QAC3D,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,4TAAC;QAAK,UAAU,aAAa;kBAC3B,cAAA,4TAAC,gaAAK;YAAC,WAAU;;8BACf,4TAAC,gaAAK;oBAAC,WAAU;oBAAyC,KAAK;;sCAC7D,4TAAC,gaAAK;4BACJ,WAAU;4BACV,MAAK;4BACJ,GAAG,SAAS,WAAW;4BACxB,aAAY;;;;;;sCAEd,4TAAC,maAAM;4BAAC,MAAK;4BAAS,WAAU;sCAC9B,cAAA,4TAAC,0QAAK;gCAAC,KAAK,+SAAU;gCAAE,KAAI;gCAAc,WAAU;;;;;;;;;;;;;;;;;gBAGvD,wBACC,4TAAC,6ZAAI;oBAAC,WAAU;8BAAuB;;;;;6EAEvC;;;;;;;;;;;;AAKV;GA3CM;;QACyB,+LAA6B;QAEvB,qQAAO;;;KAHtC","debugId":null}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/features/common/component/instagram-information.tsx"],"sourcesContent":["\"use client\";\nimport { Box, SimpleGrid, Stack, Text } from \"@mantine/core\";\nimport { useResponseInstagramDataStore } from \"../store/useInstagramResponse\";\n\nconst InstagramInformation = () => {\n  const { data } = useResponseInstagramDataStore();\n\n  if (!data?.data) {\n    return <></>;\n  }\n\n  const profile = data.data;\n  return (\n    <Stack className=\"p-3\">\n      <SimpleGrid cols={2} className=\"text-black\">\n        <Text>Nama</Text>\n        <Text>{profile.full_name}</Text>\n        <Text>Followers </Text>\n        <Text>{profile.follower_count}</Text>\n        <Text>Following</Text>\n        <Text>{profile.following_count}</Text>\n        <Text>Status Private</Text>\n        <Box\n          className={`${\n            profile.is_private ? \"bg-red-500/50\" : \"bg-green-500/50\"\n          } w-[8rem] p-2 rounded-lg`}\n        >\n          {profile.is_private ? (\n            <Text className=\"text-red-700 font-bold text-xs\">\n              Private is on\n            </Text>\n          ) : (\n            <Text className=\"text-green-700 font-bold text-xs\">\n              Private is off\n            </Text>\n          )}\n        </Box>\n        <Text>Spam Filter</Text>\n        <Box\n          className={`${\n            profile.spam_follower_setting_enabled\n              ? \"bg-red-500/50\"\n              : \"bg-green-500/50\"\n          } w-[8rem] p-2 rounded-lg`}\n        >\n          {profile.spam_follower_setting_enabled ? (\n            <Text className=\"text-red-700 font-bold text-xs\">\n              Spam filter is on\n            </Text>\n          ) : (\n            <Text className=\"text-green-700 font-bold text-xs\">\n              Spam filter is off\n            </Text>\n          )}\n        </Box>\n      </SimpleGrid>\n    </Stack>\n  );\n};\n\nexport { InstagramInformation };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;AAAA;AACA;;;AAFA;;;AAIA,MAAM,uBAAuB;;IAC3B,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,+LAA6B;IAE9C,IAAI,EAAC,iBAAA,2BAAA,KAAM,IAAI,GAAE;QACf,qBAAO;IACT;IAEA,MAAM,UAAU,KAAK,IAAI;IACzB,qBACE,4TAAC,gaAAK;QAAC,WAAU;kBACf,cAAA,4TAAC,+aAAU;YAAC,MAAM;YAAG,WAAU;;8BAC7B,4TAAC,6ZAAI;8BAAC;;;;;;8BACN,4TAAC,6ZAAI;8BAAE,QAAQ,SAAS;;;;;;8BACxB,4TAAC,6ZAAI;8BAAC;;;;;;8BACN,4TAAC,6ZAAI;8BAAE,QAAQ,cAAc;;;;;;8BAC7B,4TAAC,6ZAAI;8BAAC;;;;;;8BACN,4TAAC,6ZAAI;8BAAE,QAAQ,eAAe;;;;;;8BAC9B,4TAAC,6ZAAI;8BAAC;;;;;;8BACN,4TAAC,oZAAG;oBACF,WAAW,AAAC,GAEX,OADC,QAAQ,UAAU,GAAG,kBAAkB,mBACxC;8BAEA,QAAQ,UAAU,iBACjB,4TAAC,6ZAAI;wBAAC,WAAU;kCAAiC;;;;;iFAIjD,4TAAC,6ZAAI;wBAAC,WAAU;kCAAmC;;;;;;;;;;;8BAKvD,4TAAC,6ZAAI;8BAAC;;;;;;8BACN,4TAAC,oZAAG;oBACF,WAAW,AAAC,GAIX,OAHC,QAAQ,6BAA6B,GACjC,kBACA,mBACL;8BAEA,QAAQ,6BAA6B,iBACpC,4TAAC,6ZAAI;wBAAC,WAAU;kCAAiC;;;;;iFAIjD,4TAAC,6ZAAI;wBAAC,WAAU;kCAAmC;;;;;;;;;;;;;;;;;;;;;;AAQ/D;GAtDM;;QACa,+LAA6B;;;KAD1C","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/features/common/component/json-information.tsx"],"sourcesContent":["\"use client\";\nimport { Stack, Text, Box } from \"@mantine/core\";\nimport { useResponseInstagramDataStore } from \"../store/useInstagramResponse\";\n\nconst JsonInformation = () => {\n  const { data } = useResponseInstagramDataStore();\n\n  if (!data?.data) {\n    return <></>;\n  }\n\n  return (\n    <Stack className=\"w-2xl h-full bg-white shadow-xl p-3 outline-1 outline-black rounded-md \">\n      <Text className=\"text-black font-bold\">JSON Response</Text>\n      <Box className=\"w-full overflow-auto text-black\">\n        <pre className=\"text-xs\">{JSON.stringify(data, null, 2)}</pre>\n      </Box>\n    </Stack>\n  );\n};\n\nexport { JsonInformation };\n"],"names":[],"mappings":";;;;;AACA;AAAA;AAAA;AACA;;;AAFA;;;AAIA,MAAM,kBAAkB;;IACtB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,+LAA6B;IAE9C,IAAI,EAAC,iBAAA,2BAAA,KAAM,IAAI,GAAE;QACf,qBAAO;IACT;IAEA,qBACE,4TAAC,gaAAK;QAAC,WAAU;;0BACf,4TAAC,6ZAAI;gBAAC,WAAU;0BAAuB;;;;;;0BACvC,4TAAC,oZAAG;gBAAC,WAAU;0BACb,cAAA,4TAAC;oBAAI,WAAU;8BAAW,KAAK,SAAS,CAAC,MAAM,MAAM;;;;;;;;;;;;;;;;;AAI7D;GAfM;;QACa,+LAA6B;;;KAD1C","debugId":null}}]
}