{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/app/layout.tsx"],"sourcesContent":["import \"@mantine/core/styles.css\";\nimport \"@/shared/styles/theme.css\";\n\nimport {\n  ColorSchemeScript,\n  MantineProvider,\n  mantineHtmlProps,\n} from \"@mantine/core\";\nimport query from \"@/shared/libs/query-client\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nexport const metadata = {\n  title: \"My Mantine app\",\n  description: \"I have followed setup instructions carefully\",\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" {...mantineHtmlProps}>\n      <head>\n        <ColorSchemeScript />\n      </head>\n      <body>\n        <QueryClientProvider client={queryClient}>\n          <MantineProvider>{children}</MantineProvider>\n        </QueryClientProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AAAA;AAAA;AAMA;;;;;;AAEO,MAAM,WAAW;IACtB,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,6WAAC;QAAK,MAAK;QAAM,GAAG,+bAAgB;;0BAClC,6WAAC;0BACC,cAAA,6WAAC,8cAAiB;;;;;;;;;;0BAEpB,6WAAC;0BACC,cAAA,6WAAC,6SAAmB;oBAAC,QAAQ;8BAC3B,cAAA,6WAAC,qbAAe;kCAAE;;;;;;;;;;;;;;;;;;;;;;AAK5B","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/next%4015.5.3_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,uMACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs <module evaluation>\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wQACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 90, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const ColorSchemeScript = registerClientReference(\n    function() { throw new Error(\"Attempted to call ColorSchemeScript() from the server but ColorSchemeScript is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs\",\n    \"ColorSchemeScript\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,oBAAoB,IAAA,uYAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oPACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.mjs","sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/src/core/MantineProvider/ColorSchemeScript/ColorSchemeScript.tsx"],"sourcesContent":["import type { MantineColorScheme } from '../theme.types';\n\nexport interface ColorSchemeScriptProps extends React.ComponentPropsWithoutRef<'script'> {\n  forceColorScheme?: 'light' | 'dark';\n  defaultColorScheme?: MantineColorScheme;\n  localStorageKey?: string;\n}\n\nconst getScript = ({\n  defaultColorScheme,\n  localStorageKey,\n  forceColorScheme,\n}: Pick<ColorSchemeScriptProps, 'defaultColorScheme' | 'localStorageKey' | 'forceColorScheme'>) =>\n  forceColorScheme\n    ? `document.documentElement.setAttribute(\"data-mantine-color-scheme\", '${forceColorScheme}');`\n    : `try {\n  var _colorScheme = window.localStorage.getItem(\"${localStorageKey}\");\n  var colorScheme = _colorScheme === \"light\" || _colorScheme === \"dark\" || _colorScheme === \"auto\" ? _colorScheme : \"${defaultColorScheme}\";\n  var computedColorScheme = colorScheme !== \"auto\" ? colorScheme : window.matchMedia(\"(prefers-color-scheme: dark)\").matches ? \"dark\" : \"light\";\n  document.documentElement.setAttribute(\"data-mantine-color-scheme\", computedColorScheme);\n} catch (e) {}\n`;\n\nexport function ColorSchemeScript({\n  defaultColorScheme = 'light',\n  localStorageKey = 'mantine-color-scheme-value',\n  forceColorScheme,\n  ...others\n}: ColorSchemeScriptProps) {\n  const _defaultColorScheme = ['light', 'dark', 'auto'].includes(defaultColorScheme)\n    ? defaultColorScheme\n    : 'light';\n  return (\n    <script\n      {...others}\n      data-mantine-script\n      dangerouslySetInnerHTML={{\n        __html: getScript({\n          defaultColorScheme: _defaultColorScheme,\n          localStorageKey,\n          forceColorScheme,\n        }),\n      }}\n    />\n  );\n}\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs <module evaluation>\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,0BAA0B,IAAA,uYAAuB,EAC1D;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,oPACA;AAEG,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,oPACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/esm/core/MantineProvider/MantineProvider.mjs/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const HeadlessMantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call HeadlessMantineProvider() from the server but HeadlessMantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"HeadlessMantineProvider\",\n);\nexport const MantineProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call MantineProvider() from the server but MantineProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs\",\n    \"MantineProvider\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;AACvE;;AACO,MAAM,0BAA0B,IAAA,uYAAuB,EAC1D;IAAa,MAAM,IAAI,MAAM;AAA8P,GAC3R,gOACA;AAEG,MAAM,kBAAkB,IAAA,uYAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,gOACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/MantineProvider.mjs","sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/src/core/MantineProvider/MantineProvider.tsx"],"sourcesContent":["import './baseline.css';\nimport './global.css';\nimport './default-css-variables.css';\n\nimport { localStorageColorSchemeManager, MantineColorSchemeManager } from './color-scheme-managers';\nimport { MantineContext, MantineStylesTransform } from './Mantine.context';\nimport { MantineClasses } from './MantineClasses';\nimport { CSSVariablesResolver, MantineCssVariables } from './MantineCssVariables';\nimport { MantineThemeProvider } from './MantineThemeProvider';\nimport type { MantineColorScheme, MantineThemeOverride } from './theme.types';\nimport { useProviderColorScheme } from './use-mantine-color-scheme';\nimport { useRespectReduceMotion } from './use-respect-reduce-motion';\n\nexport interface MantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Used to retrieve/set color scheme value in external storage, by default uses `window.localStorage` */\n  colorSchemeManager?: MantineColorSchemeManager;\n\n  /** Default color scheme value used when `colorSchemeManager` cannot retrieve value from external storage, `light` by default */\n  defaultColorScheme?: MantineColorScheme;\n\n  /** Forces color scheme value, if set, MantineProvider ignores `colorSchemeManager` and `defaultColorScheme` */\n  forceColorScheme?: 'light' | 'dark';\n\n  /** CSS selector to which CSS variables should be added, `:root` by default */\n  cssVariablesSelector?: string;\n\n  /** Determines whether theme CSS variables should be added to given `cssVariablesSelector` @default `true` */\n  withCssVariables?: boolean;\n\n  /** Determines whether CSS variables should be deduplicated: if CSS variable has the same value as in default theme, it is not added in the runtime. @default `true`. */\n  deduplicateCssVariables?: boolean;\n\n  /** Function to resolve root element to set `data-mantine-color-scheme` attribute, must return undefined on server, `() => document.documentElement` by default */\n  getRootElement?: () => HTMLElement | undefined;\n\n  /** A prefix for components static classes (for example {selector}-Text-root), `mantine` by default */\n  classNamesPrefix?: string;\n\n  /** Function to generate nonce attribute added to all generated `<style />` tags */\n  getStyleNonce?: () => string;\n\n  /** Function to generate CSS variables based on theme object */\n  cssVariablesResolver?: CSSVariablesResolver;\n\n  /** Determines whether components should have static classes, for example, `mantine-Button-root`. @default `true` */\n  withStaticClasses?: boolean;\n\n  /** Determines whether global classes should be added with `<style />` tag. Global classes are required for `hiddenFrom`/`visibleFrom` and `lightHidden`/`darkHidden` props to work. @default `true`. */\n  withGlobalClasses?: boolean;\n\n  /** An object to transform `styles` and `sx` props into css classes, can be used with CSS-in-JS libraries */\n  stylesTransform?: MantineStylesTransform;\n\n  /** Your application */\n  children?: React.ReactNode;\n\n  /** Environment at which the provider is used, `'test'` environment disables all transitions and portals */\n  env?: 'default' | 'test';\n}\n\nexport function MantineProvider({\n  theme,\n  children,\n  getStyleNonce,\n  withStaticClasses = true,\n  withGlobalClasses = true,\n  deduplicateCssVariables = true,\n  withCssVariables = true,\n  cssVariablesSelector = ':root',\n  classNamesPrefix = 'mantine',\n  colorSchemeManager = localStorageColorSchemeManager(),\n  defaultColorScheme = 'light',\n  getRootElement = () => document.documentElement,\n  cssVariablesResolver,\n  forceColorScheme,\n  stylesTransform,\n  env,\n}: MantineProviderProps) {\n  const { colorScheme, setColorScheme, clearColorScheme } = useProviderColorScheme({\n    defaultColorScheme,\n    forceColorScheme,\n    manager: colorSchemeManager,\n    getRootElement,\n  });\n\n  useRespectReduceMotion({\n    respectReducedMotion: theme?.respectReducedMotion || false,\n    getRootElement,\n  });\n\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme,\n        setColorScheme,\n        clearColorScheme,\n        getRootElement,\n        classNamesPrefix,\n        getStyleNonce,\n        cssVariablesResolver,\n        cssVariablesSelector,\n        withStaticClasses,\n        stylesTransform,\n        env,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>\n        {withCssVariables && (\n          <MantineCssVariables\n            cssVariablesSelector={cssVariablesSelector}\n            deduplicateCssVariables={deduplicateCssVariables}\n          />\n        )}\n        {withGlobalClasses && <MantineClasses />}\n        {children}\n      </MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n\nexport interface HeadlessMantineProviderProps {\n  /** Theme override object */\n  theme?: MantineThemeOverride;\n\n  /** Your application */\n  children?: React.ReactNode;\n\n  /** Environment at which the provider is used, `'test'` environment disables all transitions and portals */\n  env?: 'default' | 'test';\n}\n\nexport function HeadlessMantineProvider({ children, theme, env }: HeadlessMantineProviderProps) {\n  return (\n    <MantineContext.Provider\n      value={{\n        colorScheme: 'auto',\n        setColorScheme: () => {},\n        clearColorScheme: () => {},\n        getRootElement: () => document.documentElement,\n        classNamesPrefix: 'mantine',\n        cssVariablesSelector: ':root',\n        withStaticClasses: false,\n        headless: true,\n        env,\n      }}\n    >\n      <MantineThemeProvider theme={theme}>{children}</MantineThemeProvider>\n    </MantineContext.Provider>\n  );\n}\n\nHeadlessMantineProvider.displayName = '@mantine/core/HeadlessMantineProvider';\n"],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"file":"turbopack:///[project]/node_modules/.pnpm/@mantine+core@8.3.1_@mantine+hooks@8.3.1_react@19.1.0__@types+react@19.1.12_react-dom@19.1.0_react@19.1.0__react@19.1.0/node_modules/@mantine/core/esm/core/MantineProvider/mantine-html-props.mjs","sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40mantine%2Bcore%408.3.1_%40mantine%2Bhooks%408.3.1_react%4019.1.0__%40types%2Breact%4019.1.12_react-dom%4019.1.0_react%4019.1.0__react%4019.1.0/node_modules/%40mantine/core/src/core/MantineProvider/mantine-html-props.ts"],"sourcesContent":["export const mantineHtmlProps = {\n  suppressHydrationWarning: true,\n  'data-mantine-color-scheme': 'light',\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,gBAAA,GAAmB;IAC9B,wBAAA,EAA0B,IAAA;IAC1B,2BAAA,EAA6B;AAC/B","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40tanstack%2Breact-query%405.87.4_react%4019.1.0/node_modules/%40tanstack/react-query/build/modern/QueryClientProvider.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QueryClientContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryClientContext() from the server but QueryClientContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js <module evaluation>\",\n    \"QueryClientContext\",\n);\nexport const QueryClientProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryClientProvider() from the server but QueryClientProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js <module evaluation>\",\n    \"QueryClientProvider\",\n);\nexport const useQueryClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call useQueryClient() from the server but useQueryClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js <module evaluation>\",\n    \"useQueryClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,uYAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,qKACA;AAEG,MAAM,sBAAsB,IAAA,uYAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,qKACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,qKACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40tanstack%2Breact-query%405.87.4_react%4019.1.0/node_modules/%40tanstack/react-query/build/modern/QueryClientProvider.js/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const QueryClientContext = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryClientContext() from the server but QueryClientContext is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\",\n    \"QueryClientContext\",\n);\nexport const QueryClientProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call QueryClientProvider() from the server but QueryClientProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\",\n    \"QueryClientProvider\",\n);\nexport const useQueryClient = registerClientReference(\n    function() { throw new Error(\"Attempted to call useQueryClient() from the server but useQueryClient is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/node_modules/.pnpm/@tanstack+react-query@5.87.4_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\",\n    \"useQueryClient\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,qBAAqB,IAAA,uYAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iJACA;AAEG,MAAM,sBAAsB,IAAA,uYAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iJACA;AAEG,MAAM,iBAAiB,IAAA,uYAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,iJACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/node_modules/.pnpm/%40tanstack%2Breact-query%405.87.4_react%4019.1.0/node_modules/%40tanstack/react-query/src/QueryClientProvider.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n"],"names":[],"mappings":"","debugId":null}}]
}