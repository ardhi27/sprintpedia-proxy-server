{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/shared/%20consts/global-config.ts"],"sourcesContent":["const GLOBALS = {\n  API_BASE_URL: \"https://sprintpedia.id\",\n};\n\nexport default GLOBALS;\n"],"names":[],"mappings":";;;;AAAA,MAAM,UAAU;IACd,cAAc;AAChB;uCAEe","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/shared/libs/http.ts"],"sourcesContent":["import axios from \"axios\";\nimport GLOBALS from \"@/shared/ consts/global-config\";\n/**\n * Base configuration for API request fetching.\n * @example http.get('/user')\n */\n\nconst http = axios.create({\n  baseURL: GLOBALS.API_BASE_URL,\n  withCredentials: true,\n});\n\nexport default http;\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AACA;;;CAGC,GAED,MAAM,OAAO,qMAAK,CAAC,MAAM,CAAC;IACxB,SAAS,0JAAO,CAAC,YAAY;IAC7B,iBAAiB;AACnB;uCAEe","debugId":null}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"sources":["file:///Users/agungardhiyanda/Documents/GitHub/sprirntpedia-proxy-server/src/app/api/instagramdata/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport http from \"@/shared/libs/http\";\n\nexport async function GET(req: NextRequest) {\n  try {\n    const { searchParams } = new URL(req.url);\n    const username = searchParams.get(\"username\");\n\n    if (!username) {\n      return NextResponse.json(\n        { error: \"Username tidak boleh kosong\" },\n        { status: 400 }\n      );\n    }\n\n    const cookie = req.headers.get(\"cookie\") || \"\";\n\n    //The response will return in array buffer\n    const response = await http.get(\n      `/page/instagram_tools?username=${username}`,\n      {\n        headers: {\n          Accept: \"application/json, text/plain, */*\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n          Referer: \"https://sprintpedia.id/page/instagram_tools\",\n          Origin: \"https://sprintpedia.id\",\n          Cookie: cookie,\n        },\n        responseType: \"arraybuffer\",\n        decompress: true,\n      }\n    );\n\n    //Parsing from array buffer to JSON format\n    const decodedData = Buffer.from(response.data).toString(\"utf-8\");\n    const jsonData = JSON.parse(decodedData);\n\n    console.log(\"DATA : \", jsonData);\n    return NextResponse.json(jsonData, { status: 200 });\n  } catch (err: any) {\n    console.error(\"ERR:\", err.response?.data || err.message);\n    return NextResponse.json(\n      { error: err.response?.data || err.message },\n      { status: err.response?.status || 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,eAAe,IAAI,GAAgB;IACxC,IAAI;QACF,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,IAAI,GAAG;QACxC,MAAM,WAAW,aAAa,GAAG,CAAC;QAElC,IAAI,CAAC,UAAU;YACb,OAAO,+QAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAA8B,GACvC;gBAAE,QAAQ;YAAI;QAElB;QAEA,MAAM,SAAS,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa;QAE5C,0CAA0C;QAC1C,MAAM,WAAW,MAAM,0IAAI,CAAC,GAAG,CAC7B,CAAC,+BAA+B,EAAE,UAAU,EAC5C;YACE,SAAS;gBACP,QAAQ;gBACR,oBAAoB;gBACpB,SAAS;gBACT,QAAQ;gBACR,QAAQ;YACV;YACA,cAAc;YACd,YAAY;QACd;QAGF,0CAA0C;QAC1C,MAAM,cAAc,OAAO,IAAI,CAAC,SAAS,IAAI,EAAE,QAAQ,CAAC;QACxD,MAAM,WAAW,KAAK,KAAK,CAAC;QAE5B,QAAQ,GAAG,CAAC,WAAW;QACvB,OAAO,+QAAY,CAAC,IAAI,CAAC,UAAU;YAAE,QAAQ;QAAI;IACnD,EAAE,OAAO,KAAU;QACjB,QAAQ,KAAK,CAAC,QAAQ,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QACvD,OAAO,+QAAY,CAAC,IAAI,CACtB;YAAE,OAAO,IAAI,QAAQ,EAAE,QAAQ,IAAI,OAAO;QAAC,GAC3C;YAAE,QAAQ,IAAI,QAAQ,EAAE,UAAU;QAAI;IAE1C;AACF","debugId":null}}]
}